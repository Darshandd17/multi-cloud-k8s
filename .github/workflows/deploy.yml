name: Build and Push to AWS ECR

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }} # Ensure this is defined in your GitHub secrets

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Define AWS Region and ECR Repository
        run: |
          echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> $GITHUB_ENV
          echo "ECR_REPO_URI=571600847532.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/myrepo" >> $GITHUB_ENV

      - name: Set IMAGE_TAG
        run: |
          BRANCH_NAME=$(echo $GITHUB_REF_NAME | tr '/' '-')
          SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          if [[ "$BRANCH_NAME" == "main" ]]; then
            echo "IMAGE_TAG=latest" >> $GITHUB_ENV
          else
            echo "IMAGE_TAG=${BRANCH_NAME}-${SHORT_SHA}-${TIMESTAMP}" >> $GITHUB_ENV
          fi

      - name: Build Docker image
        run: |
          docker build \
            --cache-from=${{ env.ECR_REPO_URI }}:latest \
            --tag myapp:${{ env.IMAGE_TAG }} .

      - name: Tag Docker image
        run: |
          docker tag myapp:${{ env.IMAGE_TAG }} ${{ env.ECR_REPO_URI }}:${{ env.IMAGE_TAG }}

      - name: Push Docker image to Amazon ECR
        run: |
          docker push ${{ env.ECR_REPO_URI }}:${{ env.IMAGE_TAG }}

      - name: Verify pushed image
        run: |
          echo "âœ… Pushed image: ${{ env.ECR_REPO_URI }}:${{ env.IMAGE_TAG }}"
